# '@Environment' Environment Settings
upstream @AppEnvName.com {
	# @AppEnvName Port List
}

# redirects www.* to naked domain
server {
  server_name www.@Environment.@URL;
  return 301 $scheme://@URL$request_uri;
}

# redirects non-secure to secure
server {
  listen 80;
  server_name @Environment.@URL www.@Environment.@URL;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name @Environment.@URL www.@Environment.@URL;
  root @DeploymentRoot;
  keepalive_timeout 70;

  # adding certs
  ssl_certificate /etc/letsencrypt/live/@URL/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/@URL/privkey.pem;

  # ssl configs
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_stapling on;
  ssl_stapling_verify on;
  add_header Strict-Transport-Security max-age=15768000;

  # serve static assets from public folder
  location ~ ^/(images/|img/|javascript/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt) {
    try_files /public$uri =404;
    access_log off;
  }

  # Added for letsencrypt verification
  location ~ /.well-known {
          allow all;
  }

  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;

    # purposely removed caching for staging

    # Setting up Basic Authentication for Staging
    #https://www.digitalocean.com/community/tutorials/how-to-set-up-password-authentication-with-nginx-on-ubuntu-14-04
    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/.htpasswd;

    proxy_pass http://@AppEnvName.com/;
  }

  access_log @AccessLog;
  error_log @ErrorLog;
  }
